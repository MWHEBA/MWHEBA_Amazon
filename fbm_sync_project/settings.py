"""
Django settings for fbm_sync_project project.

Generated by 'django-admin startproject' using Django 4.2.21.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# تحميل المتغيرات البيئية من ملف .env
try:
    from dotenv import load_dotenv
    try:
        load_dotenv(os.path.join(BASE_DIR, '.env'))
        # لا نطبع أي رسالة
    except Exception as e:
        # لا نطبع أي رسالة
        pass
except ImportError:
    # لا نطبع أي رسالة
    pass

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-m_-qyow5reh@f8a7(-79d^q%nxw-@ks+q@a_c*%2bkgcx8ha8_')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Custom apps
    'inventory',
    'amazon_integration',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fbm_sync_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fbm_sync_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# استخدام إعدادات قاعدة البيانات من المتغيرات البيئية
default_db_engine = os.environ.get('DB_ENGINE', 'django.db.backends.sqlite3')
if default_db_engine == 'django.db.backends.sqlite3':
    DATABASES = {
        'default': {
            'ENGINE': default_db_engine,
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    # استخدام قاعدة بيانات خارجية من المتغيرات البيئية (مثل MySQL في cPanel)
    DATABASES = {
        'default': {
            'ENGINE': default_db_engine,
            'NAME': os.environ.get('DB_NAME', ''),
            'USER': os.environ.get('DB_USER', ''),
            'PASSWORD': os.environ.get('DB_PASSWORD', ''),
            'HOST': os.environ.get('DB_HOST', 'localhost'),
            'PORT': os.environ.get('DB_PORT', ''),
            'OPTIONS': {
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1, character_set_connection=utf8mb4, collation_connection=utf8mb4_unicode_ci",
                'charset': 'utf8mb4',
                'use_unicode': True,
            },
            'TEST': {
                'CHARSET': 'utf8mb4',
                'COLLATION': 'utf8mb4_unicode_ci',
            },
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = os.environ.get('LANGUAGE_CODE', 'en-us')

TIME_ZONE = os.environ.get('TIME_ZONE', 'UTC')

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = os.environ.get('STATIC_URL', 'static/')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.environ.get('STATIC_ROOT', os.path.join(BASE_DIR, 'staticfiles'))

# Media files
MEDIA_URL = os.environ.get('MEDIA_URL', 'media/')
MEDIA_ROOT = os.environ.get('MEDIA_ROOT', os.path.join(BASE_DIR, 'media'))

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Login URL
LOGIN_URL = os.environ.get('LOGIN_URL', 'login')
LOGIN_REDIRECT_URL = os.environ.get('LOGIN_REDIRECT_URL', 'dashboard')
LOGOUT_REDIRECT_URL = os.environ.get('LOGOUT_REDIRECT_URL', 'home')

# Amazon SP-API Settings
AWS_ACCESS_KEY = os.getenv('AWS_ACCESS_KEY', '')
AWS_SECRET_KEY = os.getenv('AWS_SECRET_KEY', '')
ROLE_ARN = os.getenv('ROLE_ARN', '')
LWA_CLIENT_ID = os.getenv('LWA_CLIENT_ID', '')
LWA_CLIENT_SECRET = os.getenv('LWA_CLIENT_SECRET', '')

# إعدادات البريد الإلكتروني
EMAIL_BACKEND = os.environ.get('EMAIL_BACKEND', 'django.core.mail.backends.smtp.EmailBackend')
EMAIL_HOST = os.environ.get('EMAIL_HOST', '')
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', 587))
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', '')
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS', 'True') == 'True'
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', 'webmaster@localhost')

# متغير لتتبع ما إذا تم تحميل الإعدادات بالفعل
_settings_loaded = False
# متغير لتتبع ما إذا تم طباعة رسالة الخطأ
_error_printed = False

# Amazon SP-API Settings Loader Function
def load_settings_from_database():
    """
    محاولة تحميل إعدادات التطبيق من قاعدة البيانات
    هذه الدالة يتم استدعاؤها بعد تهيئة التطبيق
    """
    global _settings_loaded, _error_printed
    
    # تجنب تحميل الإعدادات مرتين
    if _settings_loaded:
        return
    
    try:
        # التحقق من جاهزية التطبيقات أولاً
        from django.apps import apps
        if not apps.ready:
            # لا نطبع أي رسالة
            return
            
        from amazon_integration.models import AppSettings
        app_settings = AppSettings.objects.filter(is_active=True).first()
        if app_settings:
            # تحديث متغيرات البيئة العامة
            os.environ['AWS_ACCESS_KEY'] = app_settings.aws_access_key
            os.environ['AWS_SECRET_KEY'] = app_settings.aws_secret_key
            os.environ['ROLE_ARN'] = app_settings.role_arn
            os.environ['LWA_CLIENT_ID'] = app_settings.lwa_client_id
            os.environ['LWA_CLIENT_SECRET'] = app_settings.lwa_client_secret
            
            # تحديث إعدادات جانجو
            global AWS_ACCESS_KEY, AWS_SECRET_KEY, ROLE_ARN, LWA_CLIENT_ID, LWA_CLIENT_SECRET
            AWS_ACCESS_KEY = app_settings.aws_access_key
            AWS_SECRET_KEY = app_settings.aws_secret_key
            ROLE_ARN = app_settings.role_arn
            LWA_CLIENT_ID = app_settings.lwa_client_id
            LWA_CLIENT_SECRET = app_settings.lwa_client_secret
            
            # تم تحميل الإعدادات بنجاح
            _settings_loaded = True
    except Exception as e:
        # لا نطبع أي رسالة خطأ
        pass

# لا نحاول تحميل الإعدادات مباشرة هنا
# بدلاً من ذلك، سنستخدم إشارة جاهزية التطبيق (AppConfig.ready)

# تعليق محاولة التحميل المباشرة
# try:
#     load_settings_from_database()
# except:
#     # لن يتم تنفيذ هذه الدالة عند تنفيذ الأوامر مثل makemigrations, migrate
#     # لأن قاعدة البيانات قد لا تكون جاهزة بعد 
#     pass 